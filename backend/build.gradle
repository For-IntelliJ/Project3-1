plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // ✅ Java 17
	}
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.2.0'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'  //jwt 토큰 로그인
	implementation 'org.springframework.boot:spring-boot-starter-security'//비밀번호 해시



	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

// ✅ 프론트엔드 자동 실행 (yarn.cmd 절대경로 명시)
tasks.register('startFrontend', Exec) {
	workingDir = file('../frontend')

	// 사용자별 yarn.cmd 경로 자동 설정
	def userHome = System.getProperty("user.home")
	def yarnCmd = "${userHome}\\AppData\\Roaming\\npm\\yarn.cmd"

	// Windows용 yarn.cmd 실행 (detach 비슷하게)
	if (System.properties['os.name'].toLowerCase().contains('windows')) {
		commandLine 'cmd', '/c', "start", yarnCmd, 'start'
	} else {
		// Mac/Linux용
		commandLine 'sh', '-c', 'yarn start &'
	}
}


tasks.named('bootRun') {
	dependsOn 'startFrontend'
}
